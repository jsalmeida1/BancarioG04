/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.edu.espe.isii.cooperativa.vistas;

import ec.edu.espe.isii.cooperativa.datos.Cliente;
import ec.edu.espe.isii.cooperativa.datos.Cuenta;
import ec.edu.espe.isii.cooperativa.datos.Movimiento;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pablo
 */
public class Principal extends javax.swing.JFrame {
    Cliente client;
    Cuenta cuent;
    Movimiento move;
    /**
     * Creates new form Principal.
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbed = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        rbtCrear = new javax.swing.JRadioButton();
        rbtBuscar = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabCliente = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtCed = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNumCuenta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSaldoInicial = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnLimpiarCuenta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabCuenta = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtCedMov = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cmbCuentas = new javax.swing.JComboBox<>();
        rbtDebito = new javax.swing.JRadioButton();
        rbtCredito = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabMovimiento = new javax.swing.JTable();
        btnAgregarMov = new javax.swing.JButton();
        btnNuevoMov = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtCedCu = new javax.swing.JTextField();
        btnCuBuscar = new javax.swing.JButton();
        btnCuNuevo = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabCuenta1 = new javax.swing.JTable();
        btnDesCu = new javax.swing.JButton();
        cmbDesCu = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbCuentasCon = new javax.swing.JComboBox<>();
        txtCedMovCon = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabConMov = new javax.swing.JTable();
        btnBuscarMov = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Principal");

        jLabel1.setText("Nombre:");

        jLabel2.setText("Cedula/RUC:");

        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        btnCrear.setText("Ingresar");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.setEnabled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpiar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        rbtCrear.setSelected(true);
        rbtCrear.setText("Crear");
        rbtCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCrearActionPerformed(evt);
            }
        });

        rbtBuscar.setText("Buscar");
        rbtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtBuscarActionPerformed(evt);
            }
        });

        tabCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Cedula", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabCliente);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(txtCedula))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtBuscar)
                    .addComponent(rbtCrear))
                .addGap(206, 206, 206))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(btnCrear)
                        .addGap(45, 45, 45)
                        .addComponent(btnBuscar)
                        .addGap(41, 41, 41)
                        .addComponent(btnLimpar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(rbtCrear)
                        .addGap(18, 18, 18)
                        .addComponent(rbtBuscar)))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnBuscar)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        tabbed.addTab("Clientes", jPanel1);

        jLabel3.setText("Cedula/RUC");

        txtCed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedKeyTyped(evt);
            }
        });

        jLabel4.setText("Numero de cuenta");

        txtNumCuenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumCuentaKeyTyped(evt);
            }
        });

        jLabel5.setText("Tipo");

        jLabel6.setText("Saldo Inicial");

        txtSaldoInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaldoInicialKeyTyped(evt);
            }
        });

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ahorros", "Corriente" }));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiarCuenta.setText("Limpiar");
        btnLimpiarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCuentaActionPerformed(evt);
            }
        });

        tabCuenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Numero Cuenta", "Cedula", "Tipo", "Saldo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabCuenta);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCed)
                            .addComponent(txtNumCuenta)
                            .addComponent(txtSaldoInicial)
                            .addComponent(cmbTipo, 0, 98, Short.MAX_VALUE))
                        .addGap(134, 134, 134)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(btnLimpiarCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNumCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tabbed.addTab("Cuentas", jPanel2);

        jLabel7.setText("Ingrese la Cedula");

        txtCedMov.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedMovKeyTyped(evt);
            }
        });

        jLabel8.setText("Cuenta");

        rbtDebito.setSelected(true);
        rbtDebito.setText("Debito");
        rbtDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDebitoActionPerformed(evt);
            }
        });

        rbtCredito.setText("Credito");
        rbtCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCreditoActionPerformed(evt);
            }
        });

        jLabel9.setText("Monto");

        txtMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMontoKeyTyped(evt);
            }
        });

        tabMovimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Cuenta", "Tipo", "Fecha", "Monto", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabMovimiento);

        btnAgregarMov.setText("Agregar");
        btnAgregarMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMovActionPerformed(evt);
            }
        });

        btnNuevoMov.setText("Nuevo");
        btnNuevoMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoMovActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(100, 100, 100)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbCuentas, javax.swing.GroupLayout.Alignment.LEADING, 0, 97, Short.MAX_VALUE)
                                    .addComponent(txtCedMov, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(rbtDebito)
                                .addGap(116, 116, 116)
                                .addComponent(rbtCredito)))
                        .addGap(172, 172, 172)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevoMov, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarMov, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCedMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregarMov, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoMov, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtDebito)
                        .addComponent(rbtCredito)))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        tabbed.addTab("Movimientos", jPanel3);

        jLabel14.setText("Cedula/RUC");

        txtCedCu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedCuKeyTyped(evt);
            }
        });

        btnCuBuscar.setText("Buscar");
        btnCuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuBuscarActionPerformed(evt);
            }
        });

        btnCuNuevo.setText("Nuevo");
        btnCuNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuNuevoActionPerformed(evt);
            }
        });

        tabCuenta1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Numero Cuenta", "Cedula", "Tipo", "Saldo", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tabCuenta1);

        btnDesCu.setText("Deshabilitar Cuenta");
        btnDesCu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesCuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCuBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel14)))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCuNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedCu, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDesCu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDesCu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtCedCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDesCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCuNuevo)
                    .addComponent(btnCuBuscar)
                    .addComponent(btnDesCu))
                .addGap(96, 96, 96)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        tabbed.addTab("Consultar Cuentas", jPanel4);

        jLabel10.setText("Ingrese la Cedula");

        jLabel11.setText("Cuenta");

        txtCedMovCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedMovConKeyTyped(evt);
            }
        });

        jLabel12.setText("Desde");

        jLabel13.setText("Hasta");

        tabConMov.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Cuenta", "Tipo", "Fecha", "Monto", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabConMov);

        btnBuscarMov.setText("Buscar");
        btnBuscarMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMovActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                    .addComponent(txtCedMovCon, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbCuentasCon, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(106, 106, 106)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnBuscarMov, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addGap(158, 158, 158)
                            .addComponent(jLabel12)
                            .addGap(234, 234, 234)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCedMovCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarMov))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCuentasCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btnNuevo))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel13))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        tabbed.addTab("Consultar Movimientos", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbed)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbed)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        final char caracter = evt.getKeyChar();
        String ced = txtCedula.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 13) {
           evt.consume();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void rbtCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCrearActionPerformed
        if(rbtCrear.isSelected()) {
            rbtBuscar.setSelected(false);
            btnBuscar.setEnabled(false);
            btnCrear.setEnabled(true);
            txtNombre.setEnabled(true);
        }
        else {
            rbtBuscar.setSelected(true);
            btnCrear.setEnabled(false);
            btnBuscar.setEnabled(true);
            txtNombre.setEnabled(false);
            txtNombre.setText("");
        }
    }//GEN-LAST:event_rbtCrearActionPerformed

    private void rbtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtBuscarActionPerformed
        if(rbtBuscar.isSelected()) {
            rbtCrear.setSelected(false);
            btnCrear.setEnabled(false);
            btnBuscar.setEnabled(true);
            txtNombre.setEnabled(false);
            txtNombre.setText("");
        }
        else {
            rbtCrear.setSelected(true);
            btnBuscar.setEnabled(false);
            btnCrear.setEnabled(true);
            txtNombre.setEnabled(true);
        }
    }//GEN-LAST:event_rbtBuscarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        txtNombre.setText("");
        txtCedula.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        client = new Cliente(txtCedula.getText(), txtNombre.getText());
        if(txtCedula.getText().equals("") || txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Ingrese los datos Completos");
        }
        else {
            if(validarRuc(txtCedula.getText()) || validacionRUC(txtCedula.getText())) {
                if(client.ingresarCliente(client) > 0){
                    JOptionPane.showMessageDialog(rootPane, "Se guardo exitosamente");
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error, intente nuevamente");
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "RUC o cedula invalidos");
            }
            final ArrayList<Cliente> clientArray = client.buscarCliente(txtCedula.getText());
            final DefaultTableModel modelo = (DefaultTableModel) tabCliente.getModel();
            modelo.setRowCount(0);
            for (int i = 0; i < clientArray.size(); i++) {
                Object[] fila = new Object[2];
                final Cliente client = clientArray.get(i);
                fila[0] = client.getCedula();
                fila[1] = client.getNombre();
                modelo.addRow(fila);
            }
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if(validarRuc(txtCedula.getText()) == false && validacionRUC(txtCedula.getText()) == false) {
            JOptionPane.showMessageDialog(rootPane, "Ingrese la cedula o RUC correctos");
        }
        else {
            client = new Cliente();
            final ArrayList<Cliente> clientArray = client.buscarCliente(txtCedula.getText());
            final DefaultTableModel modelo = (DefaultTableModel) tabCliente.getModel();
            modelo.setRowCount(0);
            for (int i = 0; i < clientArray.size(); i++) {
                Object[] fila = new Object[2];
                final Cliente client = clientArray.get(i);
                fila[0] = client.getCedula();
                fila[1] = client.getNombre();
                modelo.addRow(fila);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtCedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedKeyTyped
        final char caracter = evt.getKeyChar();
        final String ced = txtCed.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 13) {
           evt.consume();
        }
    }//GEN-LAST:event_txtCedKeyTyped

    private void txtSaldoInicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaldoInicialKeyTyped
        final char caracter = evt.getKeyChar();
        final String ced = txtCedula.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') && caracter != '.') {
           evt.consume();
        }
    }//GEN-LAST:event_txtSaldoInicialKeyTyped

    private void txtNumCuentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumCuentaKeyTyped
        final char caracter = evt.getKeyChar();
        final String ced = txtNumCuenta.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 8) {
           evt.consume();
        }
    }//GEN-LAST:event_txtNumCuentaKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        client = new Cliente();
        String numCuenta;
        if(txtCed.getText().equals("") || txtNumCuenta.getText().equals("") || txtSaldoInicial.getText().equals("")
                || client.buscarClienteN(txtCed.getText())== false) {
            JOptionPane.showMessageDialog(rootPane, "El cliente no existe o los datos son incompletos");
        }
        else {
            numCuenta = txtNumCuenta.getText();
            try {
                if(cmbTipo.getSelectedItem().toString().equals("Ahorros")) {
                    cuent = new Cuenta(txtNumCuenta.getText(), txtCed.getText(), "aho",
                            "act", Float.parseFloat(txtSaldoInicial.getText()));
                }
                else {
                    cuent = new Cuenta(txtNumCuenta.getText(), txtCed.getText(), "cor",
                            "act", Float.parseFloat(txtSaldoInicial.getText()));
                }
                if((validarRuc(txtCed.getText()) || validacionRUC(txtCed.getText())) && numCuenta.length() == 8) {
                    if(cuent.ingresarCu(cuent) > 0) {
                        JOptionPane.showMessageDialog(rootPane, "Se guardo exitosamente");
                    }
                    else {
                        JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error, intente nuevamente");
                    }
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "RUC, cedula o Numero de Cuenta invalidos");
                }
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Saldo Incorrecto");
            }

            final ArrayList<Cuenta> cuentArray = cuent.buscarCuenta(txtCed.getText());
            final DefaultTableModel modelo = (DefaultTableModel) tabCuenta.getModel();
            modelo.setRowCount(0);
            for (int i = 0; i < cuentArray.size(); i++) {
                Object[] fila = new Object[5];
                final Cuenta cuent = cuentArray.get(i);
                fila[0] = cuent.getCodCuenta();
                fila[1] = cuent.getCedula();
                fila[2] = cuent.getTipo();
                fila[3] = cuent.getSaldo();
                fila[4] = cuent.getEstado();
                modelo.addRow(fila);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCuentaActionPerformed
        txtNumCuenta.setText("");
        txtCed.setText("");
        txtSaldoInicial.setText("");
    }//GEN-LAST:event_btnLimpiarCuentaActionPerformed

    private void txtCedMovKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedMovKeyTyped
        cuent = new Cuenta();
        cmbCuentas.removeAllItems();
        char caracter = evt.getKeyChar();
        final String ced = txtCedMov.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 13) {
           evt.consume();
        }
        if(ced.length() == 13 || ced.length() == 10) {
            ArrayList<Cuenta> aux = new ArrayList<Cuenta>();
            aux = cuent.buscarCuenta(ced);
            if(aux.size() > 0) {
                for(int i = 0; i < aux.size(); i++) {
                    if(aux.get(i).getEstado().equals("act"))
                        cmbCuentas.addItem(aux.get(i).getCodCuenta());
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Cliente no encontrado");
            }
        }
    }//GEN-LAST:event_txtCedMovKeyTyped

    private void rbtDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDebitoActionPerformed
        if(rbtDebito.isSelected()) {
            rbtCredito.setSelected(false);
        }
        else {
            rbtCredito.setSelected(true);
        }
    }//GEN-LAST:event_rbtDebitoActionPerformed

    private void rbtCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCreditoActionPerformed
        if(rbtCredito.isSelected()) {
            rbtDebito.setSelected(false);
        }
        else {
            rbtDebito.setSelected(true);
        }
    }//GEN-LAST:event_rbtCreditoActionPerformed

    private void txtMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMontoKeyTyped
        final char caracter = evt.getKeyChar();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') && caracter != '.') {
           evt.consume();
        }
    }//GEN-LAST:event_txtMontoKeyTyped

    private void btnAgregarMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMovActionPerformed
        final Date fecha = new Date();
        cuent = new Cuenta();
        move = new Movimiento();
        ArrayList<Cuenta> cuentA;
        ArrayList<Cuenta> cuentB;
        if(!txtCedMov.getText().equals("") || !cmbCuentas.getSelectedItem().equals("") ||
                !txtMonto.getText().equals("")) {
            float mont = 0, sald = 0;
            cuentA = new ArrayList<Cuenta>();
            cuentA = cuent.buscarCuenta(txtCedMov.getText(), cmbCuentas.getSelectedItem().toString());
            try {
                mont = Float.parseFloat(txtMonto.getText());
                sald = cuentA.get(0).getSaldo();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "El monto ingresado es invalido"); }
            if(mont > sald && rbtDebito.isSelected()) {
                JOptionPane.showMessageDialog(rootPane, "Saldo Insuficinete");
            }
            else {
                if(rbtDebito.isSelected()) {
                    if(cuent.actualizarCu(cmbCuentas.getSelectedItem().toString(), sald-mont) > 0){
                        cuentB = new ArrayList<Cuenta>();
                        cuentB = cuent.buscarCuenta(txtCedMov.getText(), cmbCuentas.getSelectedItem().toString());
                        move = new Movimiento(cmbCuentas.getSelectedItem().toString(), "deb",
                                fecha, mont, cuentB.get(0).getSaldo());
                        if(move.ingresarMovimiento(move) > 0) {
                            JOptionPane.showMessageDialog(rootPane, "Se ha ingresado correctamente");
                        }
                        else {
                            JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error intente nuevamente");
                        }
                    }
                }
                else {
                    if(cuent.actualizarCu(cmbCuentas.getSelectedItem().toString(), sald+mont) > 0) {
                        cuentB = new ArrayList<Cuenta>();
                        cuentB = cuent.buscarCuenta(txtCedMov.getText(), cmbCuentas.getSelectedItem().toString());
                        move = new Movimiento(cmbCuentas.getSelectedItem().toString(), "cre", fecha, mont, cuentB.get(0).getSaldo());
                        if(move.ingresarMovimiento(move) > 0) {
                            JOptionPane.showMessageDialog(rootPane, "Se ha ingresado correctamente");
                        }
                        else {
                            JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error intente nuevamente");
                        }
                    }
                }
            }
            final ArrayList<Movimiento> moveArray = move.buscarMovimiento(cmbCuentas.getSelectedItem().toString());
            final DefaultTableModel modelo = (DefaultTableModel) tabMovimiento.getModel();
            modelo.setRowCount(0);
            for (int i = 0; i < moveArray.size(); i++) {
                Object[] fila = new Object[6];
                Movimiento move = moveArray.get(i);
                fila[0] = move.getCodMovimiento();
                fila[1] = move.getCuenta();
                fila[2] = move.getTipo();
                fila[3] = move.getFecha();
                fila[4] = move.getMonto();
                fila[5] = move.getSaldo();
                modelo.addRow(fila);
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Ingrese datos validos");
        }
    }//GEN-LAST:event_btnAgregarMovActionPerformed

    private void btnNuevoMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoMovActionPerformed
        txtCedMov.setText("");
        cmbCuentas.removeAllItems();
        txtMonto.setText("");
        final DefaultTableModel modelo = (DefaultTableModel) tabMovimiento.getModel();
        modelo.setRowCount(0);
    }//GEN-LAST:event_btnNuevoMovActionPerformed

    private void txtCedMovConKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedMovConKeyTyped
        cuent = new Cuenta();
        cmbCuentasCon.removeAllItems();
        final char caracter = evt.getKeyChar();
        final String ced = txtCedMovCon.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 13) {
           evt.consume();
        }

        if(ced.length() == 13 || ced.length() == 10) {
            ArrayList<Cuenta> cuentArray = new ArrayList<Cuenta>();
            cuentArray = cuent.buscarCuenta(ced);
            if(cuentArray.size() > 0) {
                for(int i = 0; i < cuentArray.size(); i++) {
                    if(cuentArray.get(i).getEstado().equals("act")) {
                        cmbCuentasCon.addItem(cuentArray.get(i).getCodCuenta());
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Cliente no encontrado");
            }
        }
    }//GEN-LAST:event_txtCedMovConKeyTyped

    private void btnBuscarMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMovActionPerformed
        final SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        move = new Movimiento();
        ArrayList<Movimiento> moveArray = new ArrayList<Movimiento>();
        final Date dateStart = jDateChooser1.getDate();
        final Date dateEnd = jDateChooser2.getDate();
        if(!txtCedMovCon.getText().equals("") || !cmbCuentasCon.getSelectedItem().equals("")) {
            String start = format.format(dateStart);
            String end = format.format(dateEnd);
            if(dateStart.before(dateEnd)) {
                moveArray = move.buscarMovimientoFecha(cmbCuentasCon.getSelectedItem().toString(), dateStart, dateEnd);
                final DefaultTableModel modelo = (DefaultTableModel) tabConMov.getModel();
                modelo.setRowCount(0);
                for (int i = 0; i < moveArray.size(); i++) {
                    Object[] fila = new Object[6];
                    final Movimiento move = moveArray.get(i);
                    fila[0] = move.getCodMovimiento();
                    fila[1] = move.getCuenta();
                    fila[2] = move.getTipo();
                    fila[3] = move.getFecha();
                    fila[4] = move.getMonto();
                    fila[5] = move.getSaldo();
                    modelo.addRow(fila);
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Rango de Fechas invalido");
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Ingrese datos Correctos");
        }
    }//GEN-LAST:event_btnBuscarMovActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        txtCedMovCon.setText("");
        cmbCuentasCon.removeAllItems();
        final DefaultTableModel modelo = (DefaultTableModel) tabConMov.getModel();
        modelo.setRowCount(0);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuBuscarActionPerformed
        cuent = new Cuenta();
        ArrayList<Cuenta> cuentArray = new ArrayList<Cuenta>();
        if(!txtCedCu.getText().equals("")) {
            cuentArray = cuent.buscarCuenta(txtCedCu.getText());
            if(cuentArray.size() > 0) {
                DefaultTableModel modelo = (DefaultTableModel) tabCuenta1.getModel();
                modelo.setRowCount(0);
                for (int i = 0; i < cuentArray.size(); i++) {
                    Object[] fila = new Object[5];
                    final Cuenta cuent = cuentArray.get(i);
                    fila[0] = cuent.getCodCuenta();
                    fila[1] = cuent.getCedula();
                    fila[2] = cuent.getTipo();
                    fila[3] = cuent.getSaldo();
                    fila[4] = cuent.getEstado();
                    modelo.addRow(fila);
                }
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Cliente no encontrado");
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Ingrese una cedula o RUC");
        }
    }//GEN-LAST:event_btnCuBuscarActionPerformed

    private void txtCedCuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedCuKeyTyped
        final char caracter = evt.getKeyChar();
        cmbDesCu.removeAllItems();
        cuent = new Cuenta();
        final String ced = txtCedCu.getText();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b') || ced.length() >= 13) {
           evt.consume();
        }
        if(ced.length() == 13 || ced.length() == 10) {
            ArrayList<Cuenta> cuentArray = new ArrayList<Cuenta>();
            cuentArray = cuent.buscarCuenta(ced);
            if(cuentArray.size() > 0) {
                for(int i = 0; i < cuentArray.size(); i++) {
                    if(cuentArray.get(i).getEstado().equals("act"))
                        cmbDesCu.addItem(cuentArray.get(i).getCodCuenta());
                }
            }
            else  {
                JOptionPane.showMessageDialog(rootPane, "Cliente no encontrado");
            }
        }
    }//GEN-LAST:event_txtCedCuKeyTyped

    private void btnCuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuNuevoActionPerformed
        txtCedCu.setText("");
        cmbDesCu.removeAllItems();
        final DefaultTableModel modelo = (DefaultTableModel) tabCuenta1.getModel();
        modelo.setRowCount(0);
    }//GEN-LAST:event_btnCuNuevoActionPerformed

    private void btnDesCuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesCuActionPerformed
        cuent = new Cuenta();
        if(!txtCedCu.getText().equals("") && !cmbDesCu.getSelectedItem().toString().equals("")) {
            if(JOptionPane.showConfirmDialog(rootPane, "Esta seguro que desae desabilitar la cuenta con"
                    + " el numero" + cmbDesCu.getSelectedItem().toString() +", no prodra vovlver a usarla") == 0) {
                if(cuent.actualizarCuenta(cmbDesCu.getSelectedItem().toString()) > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Se ha desabilitado correctamente");
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una cuenta");
        }
    }//GEN-LAST:event_btnDesCuActionPerformed

    public static boolean validarRuc(final String ced) {
        boolean isValid = false;
        String cedula = "0000000000000";

        if (ced == null || (ced.length() != 13 && ced.length() != 10)) {
            isValid = false;
        }
        else {
            cedula = ced.substring(0, 10);
            int prov = Integer.parseInt(cedula.substring(0, 2));
            if (!((prov > 0) || (prov <= 24)))  {
                isValid = false;
            }
            int[] d = new int[10];
            for (int i = 0; i < d.length; i++) {
                d[i] = Integer.parseInt(cedula.charAt(i) + "");
            }

            int imp = 0;
            int par = 0;

            for (int i = 0; i < d.length; i += 2) {
                d[i] = ((d[i] * 2) > 9) ? ((d[i] * 2) - 9) : (d[i] * 2);
                imp += d[i];
            }

            for (int i = 1; i < (d.length - 1); i += 2) {
                par += d[i];
            }

            int suma = imp + par;
            int d10 = Integer.parseInt((Integer.toString(suma + 10)).substring(0, 1) + "0")
            - suma;
            d10 = (d10 == 10) ? 0 : d10;
            if (d10 == d[9]) {
                isValid = true;
            }
            else {
                isValid = false;
            }
        }
        return isValid;
    }

    public static Boolean validacionRUC(String ruc) {
        int numProvincias = 24;
        int[] coeficientes = { 4, 3, 2, 7, 6, 5, 4, 3, 2 };
        int constante = 11;
        boolean respDato = false;

        if (ruc == null || ruc.length() != 13) {
            respDato = false;
        }
        else {
            int prov = Integer.parseInt(ruc.substring(0, 2));
            if (!((prov > 0) && (prov <= numProvincias))) {
                respDato = false;
            }

            int[] d = new int[10];
            int suma = 0;
            for (int i = 0; i < d.length; i++) {
                d[i] = Integer.parseInt(ruc.charAt(i) + "");
            }

            for (int i = 0; i < d.length - 1; i++) {
                d[i] = d[i] * coeficientes[i];
                suma += d[i];
            }

            int aux, resp;
            aux = suma % constante;
            resp = constante - aux;
            resp = (aux == 0) ? 0 : resp;
            if (resp == d[9]) {
                respDato = true;
            }
            else {
                respDato = false;
            }
        }
        return respDato;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMov;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarMov;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnCuBuscar;
    private javax.swing.JButton btnCuNuevo;
    private javax.swing.JButton btnDesCu;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLimpiarCuenta;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnNuevoMov;
    private javax.swing.JComboBox<String> cmbCuentas;
    private javax.swing.JComboBox<String> cmbCuentasCon;
    private javax.swing.JComboBox<String> cmbDesCu;
    private javax.swing.JComboBox<String> cmbTipo;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JRadioButton rbtBuscar;
    private javax.swing.JRadioButton rbtCrear;
    private javax.swing.JRadioButton rbtCredito;
    private javax.swing.JRadioButton rbtDebito;
    private javax.swing.JTable tabCliente;
    private javax.swing.JTable tabConMov;
    private javax.swing.JTable tabCuenta;
    private javax.swing.JTable tabCuenta1;
    private javax.swing.JTable tabMovimiento;
    private javax.swing.JTabbedPane tabbed;
    private javax.swing.JTextField txtCed;
    private javax.swing.JTextField txtCedCu;
    private javax.swing.JTextField txtCedMov;
    private javax.swing.JTextField txtCedMovCon;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumCuenta;
    private javax.swing.JTextField txtSaldoInicial;
    // End of variables declaration//GEN-END:variables
}
